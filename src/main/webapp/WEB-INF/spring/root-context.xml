<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd">

	<!-- Root Context: defines shared resources visible to all other web components -->
	
<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
<!--<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>-->
	<property name="driverClassName" value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy"/>
<!--<property name="jdbcUrl" value="jdbc:oracle:thin:@127.0.0.1:1521:XE" />-->
	<property name="jdbcUrl" value="jdbc:log4jdbc:oracle:thin:@127.0.0.1:1521:XE" />
		<property name="username" value="HOLD" />
		<property name="password" value="HOLD"/>
	</bean>
	

<!--	HikariDataSource(Connection POOL을 만드는 역할을 한다. 생성자 역할)ref ="id" 접속정보를 참조-->
	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
		<constructor-arg ref="hikariConfig" />
	</bean>


<!--	BoardMapper interface의 구현클래스 생성 SqlSessionFactoryBean(SQL을 실행하는 API)-->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:/mybatis-config.xml"></property>
		<property name="mapperLocations" value="classpath:mybatis/mapper/*Mapper.xml"></property>
	</bean>


	<!--

	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	Mapper interface들을 메모리에 올리는 방법(scan)
	상황에 따라 추가해야됨
	 -->
	<mybatis-spring:scan base-package="org.project.dao"/>

	<bean id="mailSender"
		  class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.naver.com" />
		<property name="port" value="465" />
		<property name="username" value="kyb1002@naver.com" />
		<property name="password" value="zv1271vpkyb" />
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.starttls.enable">true</prop>
				<prop key="mail.smtp.ssl.enable">true</prop>
				<prop key="mail.transport.protocol">smtp</prop>
				<prop key="mail.smtp.ssl.trust">smtp.naver.com</prop>
				<prop key="mail.smtp.ssl.protocols">TLSv1.2</prop>
				<prop key="mail.smt-ps.checkserveridentity">true</prop>
				<prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop>
				<prop key="mail.debug">true</prop>

			</props>
		</property>
	</bean>
</beans>
