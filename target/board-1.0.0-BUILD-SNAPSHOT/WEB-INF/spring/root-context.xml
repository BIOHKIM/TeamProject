<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	
<!-- 	<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig"> 
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
		<property name="jdbcUrl" value="jdbc:oracle:thin:@127.0.0.1:1521:XE" /> 
		<property name="username" value="hr" />
		<property name="password" value="hr"/>
	</bean> 
	

	HikariDataSource(Connection POOL을 만드는 역할을 한다. 생성자 역할)
	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
		<constructor-arg ref="hikariConfig" />	ref ="id" 접속정보를 참조
	</bean>


	BoardMapper interface의 구현클래스 생성 SqlSessionFactoryBean(SQL을 실행하는 API)
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:/mybatis-config.xml"></property>
		<property name="mapperLocations" value="classpath:mappers/**/*Mapper.xml"></property>
	</bean>
	
	트랙잭션 매니저
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	Mapper interface들을 메모리에 올리는 방법(scan)
	상황에 따라 추가해야됨
	<mybatis-spring:scan base-package="org.board.mapper"/> -->
	
</beans>
